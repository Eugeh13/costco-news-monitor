#!/usr/bin/env python3.11
"""
Script para ejecutar el monitoreo en horarios fijos (cada 30 minutos: :00 y :30)
VERSI√ìN CON AN√ÅLISIS DE IA
"""

import time
from datetime import datetime, timedelta
from main_ai import NewsMonitorAI


def get_next_scheduled_time():
    """
    Calcula el pr√≥ximo horario programado (:00 o :30).
    
    Returns:
        datetime: Pr√≥ximo horario de ejecuci√≥n
    """
    now = datetime.now()
    current_minute = now.minute
    
    # Si estamos antes del minuto 30, el pr√≥ximo es :30
    if current_minute < 30:
        next_time = now.replace(minute=30, second=0, microsecond=0)
    else:
        # Si estamos en o despu√©s del minuto 30, el pr√≥ximo es :00 de la siguiente hora
        next_time = (now + timedelta(hours=1)).replace(minute=0, second=0, microsecond=0)
    
    return next_time


def wait_until_next_scheduled_time():
    """Espera hasta el pr√≥ximo horario programado."""
    next_time = get_next_scheduled_time()
    now = datetime.now()
    wait_seconds = (next_time - now).total_seconds()
    
    print(f"‚è∞ Pr√≥xima ejecuci√≥n programada: {next_time.strftime('%H:%M:%S')}")
    print(f"‚è≥ Esperando {int(wait_seconds)} segundos...\n")
    
    time.sleep(wait_seconds)


def main():
    """Funci√≥n principal."""
    print("""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                                   ‚ïë
‚ïë   Sistema de Monitoreo Autom√°tico - Horarios Fijos               ‚ïë
‚ïë   Ejecuta cada 30 minutos (:00 y :30)                            ‚ïë
‚ïë   Versi√≥n con An√°lisis de IA (OpenAI)                            ‚ïë
‚ïë                                                                   ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    """)
    
    print("üöÄ Iniciando sistema de monitoreo autom√°tico con IA...")
    print("üìÖ Horarios de ejecuci√≥n: cada hora en punto (:00) y media hora (:30)")
    print("üõë Presiona Ctrl+C para detener\n")
    
    # Inicializar monitor con IA
    monitor = NewsMonitorAI(use_ai=True)
    
    try:
        while True:
            # Esperar hasta el pr√≥ximo horario programado
            wait_until_next_scheduled_time()
            
            # Ejecutar monitoreo
            print(f"\n{'='*70}")
            print(f"üîî EJECUCI√ìN PROGRAMADA - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            print(f"{'='*70}\n")
            
            try:
                monitor.run_once()
            except Exception as e:
                print(f"\n‚ö†Ô∏è  Error en la ejecuci√≥n del monitoreo: {e}")
                print("   El sistema continuar√° en el pr√≥ximo horario programado\n")
            
            print(f"\n{'='*70}")
            print(f"‚úì Ejecuci√≥n completada - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            print(f"{'='*70}\n")
            
    except KeyboardInterrupt:
        print("\n\nüõë Sistema detenido por el usuario")
        print("‚úì Monitoreo autom√°tico finalizado\n")


if __name__ == "__main__":
    main()
